// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/chats/{chat_id}/completions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new Completion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Create a new Completion",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer upstage_kindsai_key",
                        "description": "Bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "ffacea9b-d5a1-4844-8a0f-520b69a93ac3",
                        "description": "chat_id",
                        "name": "chat_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CreateChatCompletionRequest",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateChatCompletionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/service.CreateChatCompletionResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.CreateChatCompletionRequest": {
            "type": "object",
            "properties": {
                "job_group": {
                    "type": "string",
                    "example": "통계용"
                },
                "message": {
                    "type": "string",
                    "example": "트럼프 당선에 대해서 알려줘"
                },
                "provider": {
                    "type": "string",
                    "example": ""
                },
                "session": {
                    "type": "string",
                    "example": "session_id_value"
                }
            }
        },
        "model.Completion": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "integer"
                },
                "delta": {
                    "$ref": "#/definitions/model.CompletionDelta"
                },
                "id": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "token_usage": {
                    "type": "integer"
                }
            }
        },
        "model.CompletionDelta": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "references": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Reference"
                    }
                },
                "related_queries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.Reference": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/model.ReferenceAttributes"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.ReferenceAttributes": {
            "type": "object",
            "properties": {
                "byline": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "news_id": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "published_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "service.CreateChatCompletionResult": {
            "type": "object",
            "properties": {
                "completion": {
                    "$ref": "#/definitions/model.Completion"
                },
                "done": {
                    "type": "boolean"
                },
                "error": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "gnew-biz.tplinkdns.com:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Bigkinds AI",
	Description:      "This API for Bigkinds AI web service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
