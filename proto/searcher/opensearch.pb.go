// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: searcher/opensearch.proto

package searcher

import (
	encoder "bigkinds.or.kr/proto/encoder"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpenSearchSearcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName string `protobuf:"bytes,2,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	// Types that are assignable to QueryStrategy:
	//
	//	*OpenSearchSearcher_TextQueryStrategy_
	//	*OpenSearchSearcher_VectorQueryStrategy_
	QueryStrategy    isOpenSearchSearcher_QueryStrategy   `protobuf_oneof:"query_strategy"`
	CompoundStrategy *OpenSearchSearcher_CompoundStrategy `protobuf:"bytes,5,opt,name=compound_strategy,json=compoundStrategy,proto3" json:"compound_strategy,omitempty"`
}

func (x *OpenSearchSearcher) Reset() {
	*x = OpenSearchSearcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_opensearch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSearchSearcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSearchSearcher) ProtoMessage() {}

func (x *OpenSearchSearcher) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_opensearch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSearchSearcher.ProtoReflect.Descriptor instead.
func (*OpenSearchSearcher) Descriptor() ([]byte, []int) {
	return file_searcher_opensearch_proto_rawDescGZIP(), []int{0}
}

func (x *OpenSearchSearcher) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (m *OpenSearchSearcher) GetQueryStrategy() isOpenSearchSearcher_QueryStrategy {
	if m != nil {
		return m.QueryStrategy
	}
	return nil
}

func (x *OpenSearchSearcher) GetTextQueryStrategy() *OpenSearchSearcher_TextQueryStrategy {
	if x, ok := x.GetQueryStrategy().(*OpenSearchSearcher_TextQueryStrategy_); ok {
		return x.TextQueryStrategy
	}
	return nil
}

func (x *OpenSearchSearcher) GetVectorQueryStrategy() *OpenSearchSearcher_VectorQueryStrategy {
	if x, ok := x.GetQueryStrategy().(*OpenSearchSearcher_VectorQueryStrategy_); ok {
		return x.VectorQueryStrategy
	}
	return nil
}

func (x *OpenSearchSearcher) GetCompoundStrategy() *OpenSearchSearcher_CompoundStrategy {
	if x != nil {
		return x.CompoundStrategy
	}
	return nil
}

type isOpenSearchSearcher_QueryStrategy interface {
	isOpenSearchSearcher_QueryStrategy()
}

type OpenSearchSearcher_TextQueryStrategy_ struct {
	TextQueryStrategy *OpenSearchSearcher_TextQueryStrategy `protobuf:"bytes,3,opt,name=text_query_strategy,json=textQueryStrategy,proto3,oneof"`
}

type OpenSearchSearcher_VectorQueryStrategy_ struct {
	VectorQueryStrategy *OpenSearchSearcher_VectorQueryStrategy `protobuf:"bytes,4,opt,name=vector_query_strategy,json=vectorQueryStrategy,proto3,oneof"`
}

func (*OpenSearchSearcher_TextQueryStrategy_) isOpenSearchSearcher_QueryStrategy() {}

func (*OpenSearchSearcher_VectorQueryStrategy_) isOpenSearchSearcher_QueryStrategy() {}

type OpenSearchSearcher_Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueType       string `protobuf:"bytes,1,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	QueryType       string `protobuf:"bytes,2,opt,name=query_type,json=queryType,proto3" json:"query_type,omitempty"`
	SourceField     string `protobuf:"bytes,3,opt,name=source_field,json=sourceField,proto3" json:"source_field,omitempty"`
	SecondaryShould bool   `protobuf:"varint,4,opt,name=secondary_should,json=secondaryShould,proto3" json:"secondary_should,omitempty"`
}

func (x *OpenSearchSearcher_Field) Reset() {
	*x = OpenSearchSearcher_Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_opensearch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSearchSearcher_Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSearchSearcher_Field) ProtoMessage() {}

func (x *OpenSearchSearcher_Field) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_opensearch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSearchSearcher_Field.ProtoReflect.Descriptor instead.
func (*OpenSearchSearcher_Field) Descriptor() ([]byte, []int) {
	return file_searcher_opensearch_proto_rawDescGZIP(), []int{0, 0}
}

func (x *OpenSearchSearcher_Field) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *OpenSearchSearcher_Field) GetQueryType() string {
	if x != nil {
		return x.QueryType
	}
	return ""
}

func (x *OpenSearchSearcher_Field) GetSourceField() string {
	if x != nil {
		return x.SourceField
	}
	return ""
}

func (x *OpenSearchSearcher_Field) GetSecondaryShould() bool {
	if x != nil {
		return x.SecondaryShould
	}
	return false
}

type OpenSearchSearcher_TextQueryStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoringMode string                               `protobuf:"bytes,1,opt,name=scoring_mode,json=scoringMode,proto3" json:"scoring_mode,omitempty"`
	Fields      map[string]*OpenSearchSearcher_Field `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OpenSearchSearcher_TextQueryStrategy) Reset() {
	*x = OpenSearchSearcher_TextQueryStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_opensearch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSearchSearcher_TextQueryStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSearchSearcher_TextQueryStrategy) ProtoMessage() {}

func (x *OpenSearchSearcher_TextQueryStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_opensearch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSearchSearcher_TextQueryStrategy.ProtoReflect.Descriptor instead.
func (*OpenSearchSearcher_TextQueryStrategy) Descriptor() ([]byte, []int) {
	return file_searcher_opensearch_proto_rawDescGZIP(), []int{0, 1}
}

func (x *OpenSearchSearcher_TextQueryStrategy) GetScoringMode() string {
	if x != nil {
		return x.ScoringMode
	}
	return ""
}

func (x *OpenSearchSearcher_TextQueryStrategy) GetFields() map[string]*OpenSearchSearcher_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type OpenSearchSearcher_VectorQueryStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnnStrategy    *OpenSearchSearcher_VectorQueryStrategy_KNNStrategy    `protobuf:"bytes,2,opt,name=knn_strategy,json=knnStrategy,proto3" json:"knn_strategy,omitempty"`
	FilterStrategy *OpenSearchSearcher_VectorQueryStrategy_FilterStrategy `protobuf:"bytes,3,opt,name=filter_strategy,json=filterStrategy,proto3" json:"filter_strategy,omitempty"`
	Encoder        *encoder.Encoder                                       `protobuf:"bytes,5,opt,name=encoder,proto3" json:"encoder,omitempty"`
}

func (x *OpenSearchSearcher_VectorQueryStrategy) Reset() {
	*x = OpenSearchSearcher_VectorQueryStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_opensearch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSearchSearcher_VectorQueryStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSearchSearcher_VectorQueryStrategy) ProtoMessage() {}

func (x *OpenSearchSearcher_VectorQueryStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_opensearch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSearchSearcher_VectorQueryStrategy.ProtoReflect.Descriptor instead.
func (*OpenSearchSearcher_VectorQueryStrategy) Descriptor() ([]byte, []int) {
	return file_searcher_opensearch_proto_rawDescGZIP(), []int{0, 2}
}

func (x *OpenSearchSearcher_VectorQueryStrategy) GetKnnStrategy() *OpenSearchSearcher_VectorQueryStrategy_KNNStrategy {
	if x != nil {
		return x.KnnStrategy
	}
	return nil
}

func (x *OpenSearchSearcher_VectorQueryStrategy) GetFilterStrategy() *OpenSearchSearcher_VectorQueryStrategy_FilterStrategy {
	if x != nil {
		return x.FilterStrategy
	}
	return nil
}

func (x *OpenSearchSearcher_VectorQueryStrategy) GetEncoder() *encoder.Encoder {
	if x != nil {
		return x.Encoder
	}
	return nil
}

type OpenSearchSearcher_CompoundStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to CompoundStrategy:
	//
	//	*OpenSearchSearcher_CompoundStrategy_FunctionScore_
	CompoundStrategy isOpenSearchSearcher_CompoundStrategy_CompoundStrategy `protobuf_oneof:"compound_strategy"`
}

func (x *OpenSearchSearcher_CompoundStrategy) Reset() {
	*x = OpenSearchSearcher_CompoundStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_opensearch_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSearchSearcher_CompoundStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSearchSearcher_CompoundStrategy) ProtoMessage() {}

func (x *OpenSearchSearcher_CompoundStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_opensearch_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSearchSearcher_CompoundStrategy.ProtoReflect.Descriptor instead.
func (*OpenSearchSearcher_CompoundStrategy) Descriptor() ([]byte, []int) {
	return file_searcher_opensearch_proto_rawDescGZIP(), []int{0, 3}
}

func (m *OpenSearchSearcher_CompoundStrategy) GetCompoundStrategy() isOpenSearchSearcher_CompoundStrategy_CompoundStrategy {
	if m != nil {
		return m.CompoundStrategy
	}
	return nil
}

func (x *OpenSearchSearcher_CompoundStrategy) GetFunctionScore() *OpenSearchSearcher_CompoundStrategy_FunctionScore {
	if x, ok := x.GetCompoundStrategy().(*OpenSearchSearcher_CompoundStrategy_FunctionScore_); ok {
		return x.FunctionScore
	}
	return nil
}

type isOpenSearchSearcher_CompoundStrategy_CompoundStrategy interface {
	isOpenSearchSearcher_CompoundStrategy_CompoundStrategy()
}

type OpenSearchSearcher_CompoundStrategy_FunctionScore_ struct {
	FunctionScore *OpenSearchSearcher_CompoundStrategy_FunctionScore `protobuf:"bytes,1,opt,name=function_score,json=functionScore,proto3,oneof"`
}

func (*OpenSearchSearcher_CompoundStrategy_FunctionScore_) isOpenSearchSearcher_CompoundStrategy_CompoundStrategy() {
}

type OpenSearchSearcher_VectorQueryStrategy_KNNStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field       string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	SourceField string `protobuf:"bytes,2,opt,name=source_field,json=sourceField,proto3" json:"source_field,omitempty"`
	K           int32  `protobuf:"varint,3,opt,name=k,proto3" json:"k,omitempty"`
}

func (x *OpenSearchSearcher_VectorQueryStrategy_KNNStrategy) Reset() {
	*x = OpenSearchSearcher_VectorQueryStrategy_KNNStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_opensearch_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSearchSearcher_VectorQueryStrategy_KNNStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSearchSearcher_VectorQueryStrategy_KNNStrategy) ProtoMessage() {}

func (x *OpenSearchSearcher_VectorQueryStrategy_KNNStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_opensearch_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSearchSearcher_VectorQueryStrategy_KNNStrategy.ProtoReflect.Descriptor instead.
func (*OpenSearchSearcher_VectorQueryStrategy_KNNStrategy) Descriptor() ([]byte, []int) {
	return file_searcher_opensearch_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *OpenSearchSearcher_VectorQueryStrategy_KNNStrategy) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *OpenSearchSearcher_VectorQueryStrategy_KNNStrategy) GetSourceField() string {
	if x != nil {
		return x.SourceField
	}
	return ""
}

func (x *OpenSearchSearcher_VectorQueryStrategy_KNNStrategy) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

type OpenSearchSearcher_VectorQueryStrategy_FilterStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode   string           `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Filter *structpb.Struct `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *OpenSearchSearcher_VectorQueryStrategy_FilterStrategy) Reset() {
	*x = OpenSearchSearcher_VectorQueryStrategy_FilterStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_opensearch_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSearchSearcher_VectorQueryStrategy_FilterStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSearchSearcher_VectorQueryStrategy_FilterStrategy) ProtoMessage() {}

func (x *OpenSearchSearcher_VectorQueryStrategy_FilterStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_opensearch_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSearchSearcher_VectorQueryStrategy_FilterStrategy.ProtoReflect.Descriptor instead.
func (*OpenSearchSearcher_VectorQueryStrategy_FilterStrategy) Descriptor() ([]byte, []int) {
	return file_searcher_opensearch_proto_rawDescGZIP(), []int{0, 2, 1}
}

func (x *OpenSearchSearcher_VectorQueryStrategy_FilterStrategy) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *OpenSearchSearcher_VectorQueryStrategy_FilterStrategy) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

type OpenSearchSearcher_CompoundStrategy_FunctionScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Functions []*structpb.Struct `protobuf:"bytes,1,rep,name=functions,proto3" json:"functions,omitempty"`
}

func (x *OpenSearchSearcher_CompoundStrategy_FunctionScore) Reset() {
	*x = OpenSearchSearcher_CompoundStrategy_FunctionScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_opensearch_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSearchSearcher_CompoundStrategy_FunctionScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSearchSearcher_CompoundStrategy_FunctionScore) ProtoMessage() {}

func (x *OpenSearchSearcher_CompoundStrategy_FunctionScore) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_opensearch_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSearchSearcher_CompoundStrategy_FunctionScore.ProtoReflect.Descriptor instead.
func (*OpenSearchSearcher_CompoundStrategy_FunctionScore) Descriptor() ([]byte, []int) {
	return file_searcher_opensearch_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *OpenSearchSearcher_CompoundStrategy_FunctionScore) GetFunctions() []*structpb.Struct {
	if x != nil {
		return x.Functions
	}
	return nil
}

var File_searcher_opensearch_proto protoreflect.FileDescriptor

var file_searcher_opensearch_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x0b, 0x0a, 0x12,
	0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x57, 0x0a, 0x13, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x00, 0x52, 0x11, 0x74, 0x65, 0x78, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x5d, 0x0a, 0x15, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x48, 0x00, 0x52, 0x13, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x51, 0x0a, 0x11, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x1a, 0xb3, 0x01, 0x0a,
	0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34,
	0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x15, 0xfa, 0x42, 0x12, 0x72, 0x10, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x75,
	0x6c, 0x64, 0x1a, 0xfc, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x78, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x46, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23,
	0xfa, 0x42, 0x20, 0x72, 0x1e, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x07, 0x73, 0x6f, 0x66, 0x74, 0x6d, 0x61, 0x78, 0x52, 0x08, 0x68, 0x61, 0x72, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x49, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x54, 0x0a, 0x0b, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0xcb, 0x03, 0x0a, 0x13, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x56, 0x0a, 0x0c, 0x6b, 0x6e, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x4b, 0x4e, 0x4e, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x52, 0x0b, 0x6b, 0x6e, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x5f, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x12, 0x22, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x52, 0x07, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x1a, 0x5d, 0x0a, 0x0b, 0x4b, 0x4e, 0x4e, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1d, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x01, 0x6b, 0x1a, 0x78, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0xfa, 0x42, 0x1e, 0x72, 0x1c, 0x52, 0x0d, 0x65, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x6b, 0x6e, 0x6e, 0x52, 0x0b, 0x70, 0x6f, 0x73,
	0x74, 0x2d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a,
	0xd6, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x12, 0x5b, 0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x48, 0x00, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x1a, 0x50, 0x0a, 0x0d, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x32, 0x42, 0x0f, 0x4f, 0x70,
	0x65, 0x6e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x1d, 0x62, 0x69, 0x67, 0x6b, 0x69, 0x6e, 0x64, 0x73, 0x2e, 0x6f, 0x72, 0x2e, 0x6b, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_searcher_opensearch_proto_rawDescOnce sync.Once
	file_searcher_opensearch_proto_rawDescData = file_searcher_opensearch_proto_rawDesc
)

func file_searcher_opensearch_proto_rawDescGZIP() []byte {
	file_searcher_opensearch_proto_rawDescOnce.Do(func() {
		file_searcher_opensearch_proto_rawDescData = protoimpl.X.CompressGZIP(file_searcher_opensearch_proto_rawDescData)
	})
	return file_searcher_opensearch_proto_rawDescData
}

var file_searcher_opensearch_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_searcher_opensearch_proto_goTypes = []any{
	(*OpenSearchSearcher)(nil),                     // 0: OpenSearchSearcher
	(*OpenSearchSearcher_Field)(nil),               // 1: OpenSearchSearcher.Field
	(*OpenSearchSearcher_TextQueryStrategy)(nil),   // 2: OpenSearchSearcher.TextQueryStrategy
	(*OpenSearchSearcher_VectorQueryStrategy)(nil), // 3: OpenSearchSearcher.VectorQueryStrategy
	(*OpenSearchSearcher_CompoundStrategy)(nil),    // 4: OpenSearchSearcher.CompoundStrategy
	nil, // 5: OpenSearchSearcher.TextQueryStrategy.FieldsEntry
	(*OpenSearchSearcher_VectorQueryStrategy_KNNStrategy)(nil),    // 6: OpenSearchSearcher.VectorQueryStrategy.KNNStrategy
	(*OpenSearchSearcher_VectorQueryStrategy_FilterStrategy)(nil), // 7: OpenSearchSearcher.VectorQueryStrategy.FilterStrategy
	(*OpenSearchSearcher_CompoundStrategy_FunctionScore)(nil),     // 8: OpenSearchSearcher.CompoundStrategy.FunctionScore
	(*encoder.Encoder)(nil), // 9: Encoder
	(*structpb.Struct)(nil), // 10: google.protobuf.Struct
}
var file_searcher_opensearch_proto_depIdxs = []int32{
	2,  // 0: OpenSearchSearcher.text_query_strategy:type_name -> OpenSearchSearcher.TextQueryStrategy
	3,  // 1: OpenSearchSearcher.vector_query_strategy:type_name -> OpenSearchSearcher.VectorQueryStrategy
	4,  // 2: OpenSearchSearcher.compound_strategy:type_name -> OpenSearchSearcher.CompoundStrategy
	5,  // 3: OpenSearchSearcher.TextQueryStrategy.fields:type_name -> OpenSearchSearcher.TextQueryStrategy.FieldsEntry
	6,  // 4: OpenSearchSearcher.VectorQueryStrategy.knn_strategy:type_name -> OpenSearchSearcher.VectorQueryStrategy.KNNStrategy
	7,  // 5: OpenSearchSearcher.VectorQueryStrategy.filter_strategy:type_name -> OpenSearchSearcher.VectorQueryStrategy.FilterStrategy
	9,  // 6: OpenSearchSearcher.VectorQueryStrategy.encoder:type_name -> Encoder
	8,  // 7: OpenSearchSearcher.CompoundStrategy.function_score:type_name -> OpenSearchSearcher.CompoundStrategy.FunctionScore
	1,  // 8: OpenSearchSearcher.TextQueryStrategy.FieldsEntry.value:type_name -> OpenSearchSearcher.Field
	10, // 9: OpenSearchSearcher.VectorQueryStrategy.FilterStrategy.filter:type_name -> google.protobuf.Struct
	10, // 10: OpenSearchSearcher.CompoundStrategy.FunctionScore.functions:type_name -> google.protobuf.Struct
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_searcher_opensearch_proto_init() }
func file_searcher_opensearch_proto_init() {
	if File_searcher_opensearch_proto != nil {
		return
	}
	file_searcher_searcher_resource_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_searcher_opensearch_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*OpenSearchSearcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_opensearch_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*OpenSearchSearcher_Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_opensearch_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*OpenSearchSearcher_TextQueryStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_opensearch_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*OpenSearchSearcher_VectorQueryStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_opensearch_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*OpenSearchSearcher_CompoundStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_opensearch_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*OpenSearchSearcher_VectorQueryStrategy_KNNStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_opensearch_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*OpenSearchSearcher_VectorQueryStrategy_FilterStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_opensearch_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*OpenSearchSearcher_CompoundStrategy_FunctionScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_searcher_opensearch_proto_msgTypes[0].OneofWrappers = []any{
		(*OpenSearchSearcher_TextQueryStrategy_)(nil),
		(*OpenSearchSearcher_VectorQueryStrategy_)(nil),
	}
	file_searcher_opensearch_proto_msgTypes[4].OneofWrappers = []any{
		(*OpenSearchSearcher_CompoundStrategy_FunctionScore_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_searcher_opensearch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_searcher_opensearch_proto_goTypes,
		DependencyIndexes: file_searcher_opensearch_proto_depIdxs,
		MessageInfos:      file_searcher_opensearch_proto_msgTypes,
	}.Build()
	File_searcher_opensearch_proto = out.File
	file_searcher_opensearch_proto_rawDesc = nil
	file_searcher_opensearch_proto_goTypes = nil
	file_searcher_opensearch_proto_depIdxs = nil
}
